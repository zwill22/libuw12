<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classuw12_1_1integrals_1_1_integrals" kind="class" language="C++" prot="public">
    <compoundname>uw12::integrals::Integrals</compoundname>
    <includes refid="integrals_8hpp" local="no">integrals.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a019d5169325eeb6c526bec72d8c055f4" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref> &gt;</type>
        <definition>std::shared_ptr&lt;BaseIntegrals&gt; uw12::integrals::Integrals::base_integrals</definition>
        <argsstring></argsstring>
        <name>base_integrals</name>
        <qualifiedname>uw12::integrals::Integrals::base_integrals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="100" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a09934499c5beb5f0d33ab75f2cdd265e" prot="private" static="no" mutable="no">
        <type>utils::Orbitals</type>
        <definition>utils::Orbitals uw12::integrals::Integrals::occ_orbitals</definition>
        <argsstring></argsstring>
        <name>occ_orbitals</name>
        <qualifiedname>uw12::integrals::Integrals::occ_orbitals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="102" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a20931b6c8523c3aa71752329b62cc155" prot="private" static="no" mutable="no">
        <type>utils::Orbitals</type>
        <definition>utils::Orbitals uw12::integrals::Integrals::active_orbitals</definition>
        <argsstring></argsstring>
        <name>active_orbitals</name>
        <qualifiedname>uw12::integrals::Integrals::active_orbitals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="103" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1af30ca26b21a34bcd093b8a2218e8aeba" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; utils::MatVec &gt;</type>
        <definition>std::shared_ptr&lt;utils::MatVec&gt; uw12::integrals::Integrals::one_trans</definition>
        <argsstring></argsstring>
        <name>one_trans</name>
        <qualifiedname>uw12::integrals::Integrals::one_trans</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="105" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a9fcbbf573f0d72cb45f7807a14cd8169" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; utils::MatVec &gt;</type>
        <definition>std::shared_ptr&lt;utils::MatVec&gt; uw12::integrals::Integrals::one_trans_ri</definition>
        <argsstring></argsstring>
        <name>one_trans_ri</name>
        <qualifiedname>uw12::integrals::Integrals::one_trans_ri</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="106" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a3acc292dd75bba3ccb6a50a29e352684" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; utils::MatVec &gt;</type>
        <definition>std::shared_ptr&lt;utils::MatVec&gt; uw12::integrals::Integrals::two_trans</definition>
        <argsstring></argsstring>
        <name>two_trans</name>
        <qualifiedname>uw12::integrals::Integrals::two_trans</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="107" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a1825c958d3019ac7a0b7ed768af4aeed" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::mutex &gt;</type>
        <definition>std::shared_ptr&lt;std::mutex&gt; uw12::integrals::Integrals::one_trans_lock</definition>
        <argsstring></argsstring>
        <name>one_trans_lock</name>
        <qualifiedname>uw12::integrals::Integrals::one_trans_lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="109" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a5f7e73e924e693a625a6a21fd25251ef" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::mutex &gt;</type>
        <definition>std::shared_ptr&lt;std::mutex&gt; uw12::integrals::Integrals::one_trans_ri_lock</definition>
        <argsstring></argsstring>
        <name>one_trans_ri_lock</name>
        <qualifiedname>uw12::integrals::Integrals::one_trans_ri_lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="110" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a067e6aaf7fb42cdebad28a22e921ab91" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::mutex &gt;</type>
        <definition>std::shared_ptr&lt;std::mutex&gt; uw12::integrals::Integrals::two_trans_lock</definition>
        <argsstring></argsstring>
        <name>two_trans_lock</name>
        <qualifiedname>uw12::integrals::Integrals::two_trans_lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="111" column="19" bodyfile="src/integrals/integrals.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a9f17da4cbd54d662e380b84e9bdb9b99" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool uw12::integrals::Integrals::store_one_trans</definition>
        <argsstring></argsstring>
        <name>store_one_trans</name>
        <qualifiedname>uw12::integrals::Integrals::store_one_trans</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="113" column="8" bodyfile="src/integrals/integrals.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuw12_1_1integrals_1_1_integrals_1a926b54ccebf399f5f6c3ff2a3aa4a463" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool uw12::integrals::Integrals::store_one_trans_ri</definition>
        <argsstring></argsstring>
        <name>store_one_trans_ri</name>
        <qualifiedname>uw12::integrals::Integrals::store_one_trans_ri</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="114" column="8" bodyfile="src/integrals/integrals.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1aa514c8ebf78dad3f816566bb6a545534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uw12::integrals::Integrals::Integrals</definition>
        <argsstring>(const BaseIntegrals &amp;_base_integrals, const utils::Orbitals &amp;_occ_orbitals, const utils::Orbitals &amp;_active_orbitals, bool _store_one_trans=true, bool _store_one_trans_ri=true)</argsstring>
        <name>Integrals</name>
        <qualifiedname>uw12::integrals::Integrals::Integrals</qualifiedname>
        <param>
          <type>const <ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref> &amp;</type>
          <declname>_base_integrals</declname>
        </param>
        <param>
          <type>const utils::Orbitals &amp;</type>
          <declname>_occ_orbitals</declname>
        </param>
        <param>
          <type>const utils::Orbitals &amp;</type>
          <declname>_active_orbitals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_store_one_trans</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>_store_one_trans_ri</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <computeroutput><ref refid="classuw12_1_1integrals_1_1_integrals" kindref="compound">Integrals</ref></computeroutput> class using a <computeroutput><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref></computeroutput> class and the active and full occupied orbitals. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="35" column="3" bodyfile="src/integrals/integrals.cpp" bodystart="184" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a35af8eae855261197ad80bae93bc8848" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const utils::MatVec &amp;</type>
        <definition>const MatVec &amp; uw12::integrals::Integrals::get_X3idx_one_trans</definition>
        <argsstring>() const</argsstring>
        <name>get_X3idx_one_trans</name>
        <qualifiedname>uw12::integrals::Integrals::get_X3idx_one_trans</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the one mo-index transformed three index integrals <formula id="48">$(\rho k| A)$</formula>. For <computeroutput>occ_orbitals</computeroutput> index k. Returns a matrix of size (nao * n_occ, ndf) for each spin channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="46" column="24" bodyfile="src/integrals/integrals.cpp" bodystart="213" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a0c84b4b5f788a4038eafa35ef8706415" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const utils::MatVec &amp;</type>
        <definition>const MatVec &amp; uw12::integrals::Integrals::get_X3idx_one_trans_ri</definition>
        <argsstring>() const</argsstring>
        <name>get_X3idx_one_trans_ri</name>
        <qualifiedname>uw12::integrals::Integrals::get_X3idx_one_trans_ri</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the one mo-index transformed three index ri integrals <formula id="49">$(\mu i| A)$</formula>. For <computeroutput>active_orbitals</computeroutput> index i. Returns a matrix of size (nao * n_occ, ndf) for each spin channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="51" column="24" bodyfile="src/integrals/integrals.cpp" bodystart="250" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1afe736f01e0f51ef0a14a5d461121f2e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const utils::MatVec &amp;</type>
        <definition>const MatVec &amp; uw12::integrals::Integrals::get_X3idx_two_trans</definition>
        <argsstring>() const</argsstring>
        <name>get_X3idx_two_trans</name>
        <qualifiedname>uw12::integrals::Integrals::get_X3idx_two_trans</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the two mo-index transformed three index integrals <formula id="50">$(i k| A)$</formula>. For <computeroutput>active_orbitals</computeroutput> index i and <computeroutput>occ_orbitals</computeroutput> index k. Returns a matrix of size (nao * n_occ, ndf) for each spin channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="56" column="24" bodyfile="src/integrals/integrals.cpp" bodystart="289" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1abea2f766c9030a091927bd8dcd647973" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>linalg::Mat</type>
        <definition>linalg::Mat uw12::integrals::Integrals::get_X4idx_three_trans</definition>
        <argsstring>(size_t sigma) const</argsstring>
        <name>get_X4idx_three_trans</name>
        <qualifiedname>uw12::integrals::Integrals::get_X4idx_three_trans</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the three mo-index transformed four-index integrals <formula id="51">$(\rho k|j l)$</formula> for spin channel <computeroutput>sigma</computeroutput>. For <computeroutput>active_orbitals</computeroutput> index j and <computeroutput>occ_orbitals</computeroutput> indices k,l. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="61" column="16" bodyfile="src/integrals/integrals.cpp" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a01d248bef4c8409271c3de1938d7726b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>linalg::Mat</type>
        <definition>linalg::Mat uw12::integrals::Integrals::get_X4idx_four_trans</definition>
        <argsstring>(size_t sigma) const</argsstring>
        <name>get_X4idx_four_trans</name>
        <qualifiedname>uw12::integrals::Integrals::get_X4idx_four_trans</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the four mo-index transformed four-index integrals <formula id="52">$(i k|j l)$</formula> for spin channel <computeroutput>sigma</computeroutput>. For <computeroutput>active_orbitals</computeroutput> indices i,j and <computeroutput>occ_orbitals</computeroutput> indices k,l. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="66" column="16" bodyfile="src/integrals/integrals.cpp" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a095df507c445a335157d46190bc40ab8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; linalg::Vec &gt;</type>
        <definition>std::vector&lt; linalg::Vec &gt; uw12::integrals::Integrals::get_X_D</definition>
        <argsstring>() const</argsstring>
        <name>get_X_D</name>
        <qualifiedname>uw12::integrals::Integrals::get_X_D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transform base_integrals eigenvectors (lambda| w |alpha beta) over density to give total contribution for each eigen-component WV_D = Sum_j ( lambda | w | jj ) for each lambda for each spin channel </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="71" column="16" bodyfile="src/integrals/integrals.cpp" bodystart="347" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1abd933d076634c11309e56fa7e5c81747" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const linalg::Mat &amp;</type>
        <definition>const linalg::Mat &amp; uw12::integrals::Integrals::get_P2</definition>
        <argsstring>() const</argsstring>
        <name>get_P2</name>
        <qualifiedname>uw12::integrals::Integrals::get_P2</qualifiedname>
        <briefdescription>
<para>Wrapper functions to access integrals from <computeroutput><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref></computeroutput> {. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="74" column="22" bodyfile="src/integrals/integrals.cpp" bodystart="380" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a0d9f6cbaf96d4ed6f24ba45516eeef3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const linalg::Vec &amp;</type>
        <definition>const linalg::Vec &amp; uw12::integrals::Integrals::get_df_vals</definition>
        <argsstring>() const</argsstring>
        <name>get_df_vals</name>
        <qualifiedname>uw12::integrals::Integrals::get_df_vals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="76" column="22" bodyfile="src/integrals/integrals.cpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a0e6de2449d40fe43f218bac2e8345960" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const linalg::Mat &amp;</type>
        <definition>const linalg::Mat &amp; uw12::integrals::Integrals::get_J3</definition>
        <argsstring>() const</argsstring>
        <name>get_J3</name>
        <qualifiedname>uw12::integrals::Integrals::get_J3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="78" column="22" bodyfile="src/integrals/integrals.cpp" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1ae17754a79eab833d7c117f06825f924d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const linalg::Mat &amp;</type>
        <definition>const linalg::Mat &amp; uw12::integrals::Integrals::get_J3_ri</definition>
        <argsstring>() const</argsstring>
        <name>get_J3_ri</name>
        <qualifiedname>uw12::integrals::Integrals::get_J3_ri</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="80" column="22" bodyfile="src/integrals/integrals.cpp" bodystart="392" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a9fcc5c1f7063814737345a44b2378927" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t uw12::integrals::Integrals::spin_channels</definition>
        <argsstring>() const</argsstring>
        <name>spin_channels</name>
        <qualifiedname>uw12::integrals::Integrals::spin_channels</qualifiedname>
        <briefdescription>
<para>} </para>
        </briefdescription>
        <detaileddescription>
<para>Calculate the number of spin channels based on the orbitals provided </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="85" column="11" bodyfile="src/integrals/integrals.cpp" bodystart="396" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a09a62299c711d6b47ec4f930aea080ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t uw12::integrals::Integrals::number_ao_orbitals</definition>
        <argsstring>() const</argsstring>
        <name>number_ao_orbitals</name>
        <qualifiedname>uw12::integrals::Integrals::number_ao_orbitals</qualifiedname>
        <briefdescription>
<para>Determine the number of ao basis functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="88" column="11" bodyfile="src/integrals/integrals.cpp" bodystart="404" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a06861786fcb8618906faf360218b8f5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t uw12::integrals::Integrals::number_occ_orbitals</definition>
        <argsstring>(size_t sigma) const</argsstring>
        <name>number_occ_orbitals</name>
        <qualifiedname>uw12::integrals::Integrals::number_occ_orbitals</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
<para>Get the number of occupied orbitals in channel sigma. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="91" column="11" bodyfile="src/integrals/integrals.cpp" bodystart="414" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a93889436537a14bc26c17fede6f69f57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t uw12::integrals::Integrals::number_active_orbitals</definition>
        <argsstring>(size_t sigma) const</argsstring>
        <name>number_active_orbitals</name>
        <qualifiedname>uw12::integrals::Integrals::number_active_orbitals</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
<para>Get the number of active occupied orbitals in channel sigma. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="94" column="11" bodyfile="src/integrals/integrals.cpp" bodystart="418" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classuw12_1_1integrals_1_1_integrals_1a3a0ed463280960fd24554922bf0e3dc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref> &amp;</type>
        <definition>const BaseIntegrals &amp; uw12::integrals::Integrals::get_base_integrals</definition>
        <argsstring>() const</argsstring>
        <name>get_base_integrals</name>
        <qualifiedname>uw12::integrals::Integrals::get_base_integrals</qualifiedname>
        <briefdescription>
<para>Obtain the base integrals stored in the class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrals/integrals.hpp" line="97" column="24" bodyfile="src/integrals/integrals.cpp" bodystart="422" bodyend="424"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class for calculating and managing all integrals for df-UW12</para>
<para>This class calculates and stores mo transformed UW12 integrals. The class is initialised using a <computeroutput><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref></computeroutput> object which manages all untransformed three-index integrals and two-index df integrals.</para>
<para>All mo transformed integrals may be accessed through this class, while functions to access untransformed integrals in <computeroutput><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref></computeroutput> are also provided. No integrals are calculated until requested.</para>
<para><ref refid="classuw12_1_1integrals_1_1_integrals" kindref="compound">Integrals</ref> are calculated via differing methods depending on which integrals are stored and which integrals storage is set to true. For example two-index mo transformed integrals may be calculated using <computeroutput>get_X3idx_two_trans</computeroutput>. If <computeroutput>store_one_trans</computeroutput> is true then the one-index transformed integrals are calculated and stored before transforming the second-index. Else the two transformed integrals are calculated from 3idx ao integral from <computeroutput><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref></computeroutput> or directly depending on the settings for <computeroutput>storing_ao_integrals</computeroutput> in <computeroutput><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref></computeroutput>. </para>
    </detaileddescription>
    <location file="src/integrals/integrals.hpp" line="31" column="1" bodyfile="src/integrals/integrals.hpp" bodystart="31" bodyend="115"/>
    <listofallmembers>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a20931b6c8523c3aa71752329b62cc155" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>active_orbitals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a019d5169325eeb6c526bec72d8c055f4" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>base_integrals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a3a0ed463280960fd24554922bf0e3dc7" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_base_integrals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a0d9f6cbaf96d4ed6f24ba45516eeef3d" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_df_vals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a0e6de2449d40fe43f218bac2e8345960" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_J3</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1ae17754a79eab833d7c117f06825f924d" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_J3_ri</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1abd933d076634c11309e56fa7e5c81747" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_P2</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a35af8eae855261197ad80bae93bc8848" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_X3idx_one_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a0c84b4b5f788a4038eafa35ef8706415" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_X3idx_one_trans_ri</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1afe736f01e0f51ef0a14a5d461121f2e6" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_X3idx_two_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a01d248bef4c8409271c3de1938d7726b" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_X4idx_four_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1abea2f766c9030a091927bd8dcd647973" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_X4idx_three_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a095df507c445a335157d46190bc40ab8" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>get_X_D</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1aa514c8ebf78dad3f816566bb6a545534" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>Integrals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a93889436537a14bc26c17fede6f69f57" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>number_active_orbitals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a09a62299c711d6b47ec4f930aea080ef" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>number_ao_orbitals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a06861786fcb8618906faf360218b8f5e" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>number_occ_orbitals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a09934499c5beb5f0d33ab75f2cdd265e" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>occ_orbitals</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1af30ca26b21a34bcd093b8a2218e8aeba" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>one_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a1825c958d3019ac7a0b7ed768af4aeed" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>one_trans_lock</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a9fcbbf573f0d72cb45f7807a14cd8169" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>one_trans_ri</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a5f7e73e924e693a625a6a21fd25251ef" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>one_trans_ri_lock</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a9fcc5c1f7063814737345a44b2378927" prot="public" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>spin_channels</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a9f17da4cbd54d662e380b84e9bdb9b99" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>store_one_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a926b54ccebf399f5f6c3ff2a3aa4a463" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>store_one_trans_ri</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a3acc292dd75bba3ccb6a50a29e352684" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>two_trans</name></member>
      <member refid="classuw12_1_1integrals_1_1_integrals_1a067e6aaf7fb42cdebad28a22e921ab91" prot="private" virt="non-virtual"><scope>uw12::integrals::Integrals</scope><name>two_trans_lock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
