<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="test__uw12_8cpp" kind="file" language="C++">
    <compoundname>test_uw12.cpp</compoundname>
    <includes refid="uw12_8hpp" local="yes">uw12.hpp</includes>
    <includes refid="catch_8hpp" local="yes">catch.hpp</includes>
    <includes refid="setup__integrals_8hpp" local="yes">setup_integrals.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>integrals/base_integrals.hpp</label>
        <link refid="base__integrals_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>integral_functions.hpp</label>
        <link refid="integral__functions_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>integrals/integrals.hpp</label>
        <link refid="integrals_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>three_electron/ri_utils.hpp</label>
        <link refid="ri__utils_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>utils/linalg.hpp</label>
        <link refid="linalg_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utils/parallel.hpp</label>
        <link refid="parallel_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/utils.hpp</label>
        <link refid="utils_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>uw12.hpp</label>
        <link refid="uw12_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>catch.hpp</label>
        <link refid="catch_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>setup_integrals.hpp</label>
        <link refid="setup__integrals_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/test_uw12.cpp</label>
        <link refid="test__uw12_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>catch2/catch_all.hpp</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>config.hpp</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="test__uw12_8cpp_1adefd5805721e032fad7b25a27158353a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t n_ao</definition>
        <argsstring></argsstring>
        <name>n_ao</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="9" column="18" bodyfile="tests/test_uw12.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a0eb835f4391cded2e322c67bab2f84a1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t n_df</definition>
        <argsstring></argsstring>
        <name>n_df</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="10" column="18" bodyfile="tests/test_uw12.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1afd6e0157cc93983112c1ecb52e009ceb" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t n_ri</definition>
        <argsstring></argsstring>
        <name>n_ri</name>
        <initializer>= 14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="11" column="18" bodyfile="tests/test_uw12.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a9ac328331bdb42de91c51a93e33b40a2" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto W_seed</definition>
        <argsstring></argsstring>
        <name>W_seed</name>
        <initializer>= uw12_test::seed - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="13" column="16" bodyfile="tests/test_uw12.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a94b91a907a534d14bd9324688f7942a0" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto V_seed</definition>
        <argsstring></argsstring>
        <name>V_seed</name>
        <initializer>= uw12_test::seed</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="14" column="16" bodyfile="tests/test_uw12.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a68529df1aee2b67e996ae4b7e3eee91f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto WV_seed</definition>
        <argsstring></argsstring>
        <name>WV_seed</name>
        <initializer>= uw12_test::seed + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="15" column="16" bodyfile="tests/test_uw12.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a41d106865b1c8d7d1c65bc8b21aa7a17" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto abs_projectors</definition>
        <argsstring></argsstring>
        <name>abs_projectors</name>
        <initializer>= uw12_test::setup_abs_projector(n_ao, n_ri)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="17" column="12" bodyfile="tests/test_uw12.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a91c605fd4e825de0644416dd6377b151" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto W</definition>
        <argsstring></argsstring>
        <name>W</name>
        <initializer>= uw12_test::setup_base_integrals(n_ao, n_df, n_ri, W_seed)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="19" column="12" bodyfile="tests/test_uw12.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1a83668b21a993082d1bfdff13d8d80b5c" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto V</definition>
        <argsstring></argsstring>
        <name>V</name>
        <initializer>= uw12_test::setup_base_integrals(n_ao, n_df, n_ri, V_seed)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="20" column="12" bodyfile="tests/test_uw12.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__uw12_8cpp_1ad93f6468f17b19c6fa96774ddfd95850" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto WV</definition>
        <argsstring></argsstring>
        <name>WV</name>
        <initializer>= uw12_test::setup_base_integrals(n_ao, n_df, W_seed)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="21" column="12" bodyfile="tests/test_uw12.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="test__uw12_8cpp_1af9003f11ca16302815b0e033e70198f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto setup_occupations</definition>
        <argsstring>(const std::vector&lt; size_t &gt; &amp;n_occ)</argsstring>
        <name>setup_occupations</name>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>n_occ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="23" column="6" bodyfile="tests/test_uw12.cpp" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="test__uw12_8cpp_1ac29bbc2f0da6515b59e0bdc8553e0b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto form_fock_full</definition>
        <argsstring>(const uw12::utils::Orbitals &amp;occ_orb, const uw12::utils::Occupations &amp;occ, const std::vector&lt; size_t &gt; &amp;n_active)</argsstring>
        <name>form_fock_full</name>
        <param>
          <type>const uw12::utils::Orbitals &amp;</type>
          <declname>occ_orb</declname>
        </param>
        <param>
          <type>const uw12::utils::Occupations &amp;</type>
          <declname>occ</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>n_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="32" column="6" bodyfile="tests/test_uw12.cpp" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="test__uw12_8cpp_1a53b30b652bc3d868bb4d1e9a5b864fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_test</definition>
        <argsstring>(const uw12::utils::Orbitals &amp;occ_orb, const uw12::utils::Occupations &amp;occ, const std::vector&lt; size_t &gt; &amp;n_active)</argsstring>
        <name>run_test</name>
        <param>
          <type>const uw12::utils::Orbitals &amp;</type>
          <declname>occ_orb</declname>
        </param>
        <param>
          <type>const uw12::utils::Occupations &amp;</type>
          <declname>occ</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>n_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="42" column="6" bodyfile="tests/test_uw12.cpp" bodystart="42" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="test__uw12_8cpp_1a280653011ef4a910de18713d570506dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Test UW12 - Closed shell&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Test UW12 - Closed shell&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="74" column="1" bodyfile="tests/test_uw12.cpp" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="test__uw12_8cpp_1adc1704b3099a7e27987b2a7a9ec44694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Test UW12 - Open shell&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Test UW12 - Open shell&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="86" column="1" bodyfile="tests/test_uw12.cpp" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="test__uw12_8cpp_1a3ebd09f299fa7e044dc13050af2fc0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Test UW12 - Check error handling&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Test UW12 - Check error handling&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_uw12.cpp" line="97" column="1" bodyfile="tests/test_uw12.cpp" bodystart="97" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Zack<sp/>Williams<sp/>on<sp/>09/04/2024.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;uw12.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;setup_integrals.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_ao<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_df<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_ri<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W_seed<sp/>=<sp/>uw12_test::seed<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>V_seed<sp/>=<sp/>uw12_test::seed;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>WV_seed<sp/>=<sp/>uw12_test::seed<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abs_projectors<sp/>=<sp/>uw12_test::setup_abs_projector(n_ao,<sp/>n_ri);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W<sp/>=<sp/>uw12_test::setup_base_integrals(n_ao,<sp/>n_df,<sp/>n_ri,<sp/>W_seed);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>uw12_test::setup_base_integrals(n_ao,<sp/>n_df,<sp/>n_ri,<sp/>V_seed);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>WV<sp/>=<sp/>uw12_test::setup_base_integrals(n_ao,<sp/>n_df,<sp/>W_seed);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>setup_occupations(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>n_occ)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>uw12::utils::Occupations<sp/>occ;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/>:<sp/>n_occ)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>occ.push_back(uw12::linalg::ones(n));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>occ;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>form_fock_full(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::utils::Orbitals&amp;<sp/>occ_orb,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::utils::Occupations&amp;<sp/>occ,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>n_active</highlight></codeline>
<codeline lineno="36"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uw12::form_fock(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W,<sp/>V,<sp/>WV,<sp/>abs_projectors,<sp/>occ_orb,<sp/>occ,<sp/>n_active,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1.0,<sp/>0.5</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run_test(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::utils::Orbitals&amp;<sp/>occ_orb,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::utils::Occupations&amp;<sp/>occ,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>n_active</highlight></codeline>
<codeline lineno="46"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_spin<sp/>=<sp/>uw12::utils::spin_channels(occ_orb);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(occ)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(n_active)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[fock_os,<sp/>e_os]<sp/>=<sp/>uw12::form_fock(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W,<sp/>V,<sp/>WV,<sp/>abs_projectors,<sp/>occ_orb,<sp/>occ,<sp/>n_active,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1.0,<sp/>0,<sp/>3</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[fock_ss,<sp/>e_ss]<sp/>=<sp/>uw12::form_fock(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W,<sp/>V,<sp/>WV,<sp/>abs_projectors,<sp/>occ_orb,<sp/>occ,<sp/>n_active,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0.0,<sp/>1.0,<sp/>3</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[fock,<sp/>e]<sp/>=<sp/>uw12::form_fock(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W,<sp/>V,<sp/>WV,<sp/>abs_projectors,<sp/>occ_orb,<sp/>occ,<sp/>n_active,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1.0,<sp/>0.5,<sp/>3</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>CHECK_THAT(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e_os<sp/>+<sp/>0.5<sp/>*<sp/>e_ss,<sp/>Catch::Matchers::WithinRel(e,<sp/>uw12_test::epsilon)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>0;<sp/>sigma<sp/>&lt;<sp/>n_spin;<sp/>++sigma)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::linalg::Mat<sp/>mat1<sp/>=<sp/>fock_os[sigma]<sp/>+<sp/>0.5<sp/>*<sp/>fock_ss[sigma];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mat2<sp/>=<sp/>fock[sigma];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(mat1,<sp/>mat2,<sp/>uw12_test::epsilon));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;Test<sp/>UW12<sp/>-<sp/>Closed<sp/>shell&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>n_occ<sp/>=<sp/>{3};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>n_active<sp/>=<sp/>{2};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[occ_orb,<sp/>active_orb]<sp/>=</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uw12_test::setup_orbitals(n_occ,<sp/>n_active,<sp/>n_ao);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>occ<sp/>=<sp/>setup_occupations(n_occ);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>run_test(occ_orb,<sp/>occ,<sp/>n_active);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;Test<sp/>UW12<sp/>-<sp/>Open<sp/>shell&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>n_occ<sp/>=<sp/>{4,<sp/>3};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>n_active<sp/>=<sp/>{3,<sp/>2};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[occ_orb,<sp/>active_orb]<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uw12_test::setup_orbitals(n_occ,<sp/>n_active,<sp/>n_ao);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>occ<sp/>=<sp/>setup_occupations(n_occ);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>run_test(occ_orb,<sp/>occ,<sp/>n_active);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;Test<sp/>UW12<sp/>-<sp/>Check<sp/>error<sp/>handling&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>n_occ<sp/>=<sp/>{4,<sp/>3};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>n_active<sp/>=<sp/>{3,<sp/>2};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[occ_orb,<sp/>active_orb]<sp/>=</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uw12_test::setup_orbitals(n_occ,<sp/>n_active,<sp/>n_ao);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>occ<sp/>=<sp/>setup_occupations(n_occ);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>CHECK_THROWS(form_fock_full(occ_orb,<sp/>occ,<sp/>{3}));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>CHECK_THROWS(form_fock_full(occ_orb,<sp/>{occ[0]},<sp/>n_active));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>CHECK_THROWS(form_fock_full({occ_orb[0]},<sp/>occ,<sp/>n_active));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>active_occ<sp/>=<sp/>setup_occupations(n_active);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>CHECK_THROWS(form_fock_full(active_orb,<sp/>active_occ,<sp/>n_occ));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>CHECK_THROWS(form_fock_full(active_orb,<sp/>occ,<sp/>n_active));</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/test_uw12.cpp"/>
  </compounddef>
</doxygen>
