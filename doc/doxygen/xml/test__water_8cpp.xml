<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="test__water_8cpp" kind="file" language="C++">
    <compoundname>test_water.cpp</compoundname>
    <includes refid="uw12_8hpp" local="yes">uw12.hpp</includes>
    <includes refid="catch_8hpp" local="yes">catch.hpp</includes>
    <includes refid="test__data_8hpp" local="yes">test_data.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>integrals/base_integrals.hpp</label>
        <link refid="base__integrals_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>integral_functions.hpp</label>
        <link refid="integral__functions_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>three_electron/ri_utils.hpp</label>
        <link refid="ri__utils_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>utils/linalg.hpp</label>
        <link refid="linalg_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utils/parallel.hpp</label>
        <link refid="parallel_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/utils.hpp</label>
        <link refid="utils_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>uw12.hpp</label>
        <link refid="uw12_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>catch.hpp</label>
        <link refid="catch_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>test_data.hpp</label>
        <link refid="test__data_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/test_water.cpp</label>
        <link refid="test__water_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>catch2/catch_all.hpp</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>config.hpp</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="test__water_8cpp_1a2b797201e3bb2508d84e5d1f55c61c56" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto threshold</definition>
        <argsstring></argsstring>
        <name>threshold</name>
        <initializer>= 100 * uw12_test::epsilon</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_water.cpp" line="10" column="16" bodyfile="tests/test_water.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="test__water_8cpp_1a9a5c2ba1ab63d827cfd6171fbc207e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_test</definition>
        <argsstring>(const uw12_test::TestData &amp;test_data)</argsstring>
        <name>run_test</name>
        <param>
          <type>const <ref refid="structuw12__test_1_1_test_data" kindref="compound">uw12_test::TestData</ref> &amp;</type>
          <declname>test_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_water.cpp" line="12" column="6" bodyfile="tests/test_water.cpp" bodystart="12" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="test__water_8cpp_1af665af5f12bbd1f9f654eddca7f9d290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Regression Test UW12 - Test Water&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Regression Test UW12 - Test Water&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_water.cpp" line="66" column="1" bodyfile="tests/test_water.cpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="test__water_8cpp_1aa5538fa4d7ebe19e9876335c35635e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Regression Test UW12 - Test Water (cation)&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Regression Test UW12 - Test Water (cation)&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_water.cpp" line="73" column="1" bodyfile="tests/test_water.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Zack<sp/>Williams<sp/>on<sp/>10/04/2024.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;uw12.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>100<sp/>*<sp/>uw12_test::epsilon;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run_test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structuw12__test_1_1_test_data" kindref="compound">uw12_test::TestData</ref>&amp;<sp/>test_data)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>W<sp/>=<sp/>test_data.W;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>V<sp/>=<sp/>test_data.V;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>WV<sp/>=<sp/>test_data.WV;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_ao<sp/>=<sp/>W.get_number_ao();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_df<sp/>=<sp/>W.get_number_df();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_ri<sp/>=<sp/>W.get_number_ri();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>REQUIRE(V.get_number_ao()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>REQUIRE(V.get_number_df()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>REQUIRE(V.get_number_ri()<sp/>==<sp/>n_ri);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>REQUIRE(WV.get_number_ao()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>REQUIRE(WV.get_number_df()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::linalg::n_rows(test_data.S)<sp/>==<sp/>n_ao<sp/>+<sp/>n_ri);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::linalg::n_cols(test_data.S)<sp/>==<sp/>n_ao<sp/>+<sp/>n_ri);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_spin<sp/>=<sp/>uw12::utils::spin_channels(test_data.orbitals);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(test_data.orbitals)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(test_data.occ)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(test_data.n_active)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(test_data.fock.fock)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abs_projectors<sp/>=</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uw12::three_el::ri::calculate_abs_projectors(test_data.S,<sp/>n_ao,<sp/>n_ri);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[fock,<sp/>energy]<sp/>=<sp/>uw12::form_fock(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WV,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abs_projectors,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_data.orbitals,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_data.occ,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_data.n_active,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.0,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.5</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>CHECK_THAT(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>energy,<sp/>Catch::Matchers::WithinAbs(test_data.fock.energy,<sp/>threshold)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::utils::spin_channels(fock)<sp/>==<sp/>n_spin);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>0;<sp/>sigma<sp/>&lt;<sp/>n_spin;<sp/>++sigma)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fock[sigma],<sp/>test_data.fock.fock[sigma],<sp/>threshold</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;Regression<sp/>Test<sp/>UW12<sp/>-<sp/>Test<sp/>Water&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_spin<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_data<sp/>=<sp/><ref refid="structuw12__test_1_1_test_data" kindref="compound">uw12_test::TestData</ref>(</highlight><highlight class="stringliteral">&quot;water&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;neutral&quot;</highlight><highlight class="normal">,<sp/>n_spin);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>run_test(test_data);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;Regression<sp/>Test<sp/>UW12<sp/>-<sp/>Test<sp/>Water<sp/>(cation)&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_spin<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_data<sp/>=<sp/><ref refid="structuw12__test_1_1_test_data" kindref="compound">uw12_test::TestData</ref>(</highlight><highlight class="stringliteral">&quot;water&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cation&quot;</highlight><highlight class="normal">,<sp/>n_spin);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>run_test(test_data);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/test_water.cpp"/>
  </compounddef>
</doxygen>
