<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="ri__utils_8hpp" kind="file" language="C++">
    <compoundname>ri_utils.hpp</compoundname>
    <includes refid="linalg_8hpp" local="yes">utils/linalg.hpp</includes>
    <includedby refid="libuw12_8cpp" local="yes">libuw12.cpp</includedby>
    <includedby refid="libuw12_8hpp" local="yes">libuw12.hpp</includedby>
    <includedby refid="direct__utils_8hpp" local="yes">src/three_electron/direct_utils.hpp</includedby>
    <includedby refid="indirect__utils_8cpp" local="yes">src/three_electron/indirect_utils.cpp</includedby>
    <includedby refid="indirect__utils_8hpp" local="yes">src/three_electron/indirect_utils.hpp</includedby>
    <includedby refid="three__electron_8cpp" local="yes">src/three_electron/three_electron.cpp</includedby>
    <includedby refid="three__electron_8hpp" local="yes">src/three_electron/three_electron.hpp</includedby>
    <includedby refid="uw12_8hpp" local="yes">src/uw12.hpp</includedby>
    <includedby refid="setup__integrals_8hpp" local="yes">tests/setup_integrals.hpp</includedby>
    <includedby refid="test__ri__utils_8cpp" local="yes">tests/test_ri_utils.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/three_electron/ri_utils.hpp</label>
        <link refid="ri__utils_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>utils/linalg.hpp</label>
        <link refid="linalg_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>config.hpp</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>libuw12.hpp</label>
        <link refid="libuw12_8hpp_source"/>
      </node>
      <node id="3">
        <label>src/three_electron/direct_utils.hpp</label>
        <link refid="direct__utils_8hpp_source"/>
      </node>
      <node id="4">
        <label>src/three_electron/indirect_utils.hpp</label>
        <link refid="indirect__utils_8hpp_source"/>
      </node>
      <node id="1">
        <label>src/three_electron/ri_utils.hpp</label>
        <link refid="ri__utils_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/three_electron/three_electron.hpp</label>
        <link refid="three__electron_8hpp_source"/>
      </node>
      <node id="6">
        <label>src/uw12.hpp</label>
        <link refid="uw12_8hpp_source"/>
      </node>
      <node id="7">
        <label>tests/setup_integrals.hpp</label>
        <link refid="setup__integrals_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structuw12_1_1three__el_1_1ri_1_1_a_b_s_projectors" prot="public">uw12::three_el::ri::ABSProjectors</innerclass>
    <innernamespace refid="namespaceuw12">uw12</innernamespace>
    <innernamespace refid="namespaceuw12_1_1three__el">uw12::three_el</innernamespace>
    <innernamespace refid="namespaceuw12_1_1three__el_1_1ri">uw12::three_el::ri</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Zack<sp/>Williams<sp/>on<sp/>25/03/2024.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RI_UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RI_UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils/linalg.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">uw12::three_el::ri<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structuw12_1_1three__el_1_1ri_1_1_a_b_s_projectors" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuw12_1_1three__el_1_1ri_1_1_a_b_s_projectors" kindref="compound">ABSProjectors</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>linalg::Mat<sp/>s_inv_ri_ri;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>linalg::Mat<sp/>s_inv_ri_ao;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>linalg::Mat<sp/>s_inv_ao_ri;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>linalg::Mat<sp/>s_inv_ao_ao;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structuw12_1_1three__el_1_1ri_1_1_a_b_s_projectors" kindref="compound">ABSProjectors</ref><sp/>calculate_abs_projectors(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>linalg::Mat&amp;<sp/>overlap_matrix,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_ao,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_ri,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eigen_ld_threshold<sp/>=<sp/>1e-8,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>linear_dependency_threshold<sp/>=<sp/>1e-6</highlight></codeline>
<codeline lineno="47"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">linalg::head_rows;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">linalg::tail_rows;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">linalg::transpose;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[s_vals,<sp/>s_vecs]<sp/>=<sp/>linalg::eigen_decomposition(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlap_matrix,<sp/>linear_dependency_threshold,<sp/>eigen_ld_threshold</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linalg::n_rows(s_vecs)<sp/>!=<sp/>n_ao<sp/>+<sp/>n_ri)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Total<sp/>number<sp/>of<sp/>basis<sp/>functions<sp/>is<sp/>inconsistent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>assert(linalg::n_cols(s_vecs)<sp/>==<sp/>linalg::n_elem(s_vals));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>linalg::Mat<sp/>inv<sp/>=<sp/>linalg::inv_sym_pd(linalg::diagmat(s_vals));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail_rows(s_vecs,<sp/>n_ri)<sp/>*<sp/>inv<sp/>*<sp/>transpose(tail_rows(s_vecs,<sp/>n_ri)),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail_rows(s_vecs,<sp/>n_ri)<sp/>*<sp/>inv<sp/>*<sp/>transpose(head_rows(s_vecs,<sp/>n_ao)),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_rows(s_vecs,<sp/>n_ao)<sp/>*<sp/>inv<sp/>*<sp/>transpose(tail_rows(s_vecs,<sp/>n_ri)),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_rows(s_vecs,<sp/>n_ao)<sp/>*<sp/>inv<sp/>*<sp/>transpose(head_rows(s_vecs,<sp/>n_ao))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uw12::three_el::ri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>RI_UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/three_electron/ri_utils.hpp"/>
  </compounddef>
</doxygen>
