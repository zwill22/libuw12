<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="test__base__integrals_8cpp" kind="file" language="C++">
    <compoundname>test_base_integrals.cpp</compoundname>
    <includes refid="catch_8hpp" local="yes">catch.hpp</includes>
    <includes refid="base__integrals_8hpp" local="yes">integrals/base_integrals.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>integrals/base_integrals.hpp</label>
        <link refid="base__integrals_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>integral_functions.hpp</label>
        <link refid="integral__functions_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utils/linalg.hpp</label>
        <link refid="linalg_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utils/parallel.hpp</label>
        <link refid="parallel_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>catch.hpp</label>
        <link refid="catch_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/test_base_integrals.cpp</label>
        <link refid="test__base__integrals_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cassert</label>
      </node>
      <node id="3">
        <label>catch2/catch_all.hpp</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>config.hpp</label>
      </node>
      <node id="8">
        <label>functional</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="6">
        <label>mutex</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="test__base__integrals_8cpp_1a4b650c87f451cc64dfb956160e5a87a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_df_vals</definition>
        <argsstring>(const BaseIntegrals &amp;base_integrals, const size_t n_df)</argsstring>
        <name>check_df_vals</name>
        <param>
          <type>const <ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref> &amp;</type>
          <declname>base_integrals</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>n_df</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_base_integrals.cpp" line="11" column="6" bodyfile="tests/test_base_integrals.cpp" bodystart="11" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="test__base__integrals_8cpp_1a9659e068e10c7a28fe3d4b121cd0caed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_df_offsets</definition>
        <argsstring>(const BaseIntegrals &amp;base_integrals, const std::vector&lt; size_t &gt; &amp;df_sizes)</argsstring>
        <name>check_df_offsets</name>
        <param>
          <type>const <ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref> &amp;</type>
          <declname>base_integrals</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>df_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_base_integrals.cpp" line="21" column="6" bodyfile="tests/test_base_integrals.cpp" bodystart="21" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="test__base__integrals_8cpp_1a48b4b75969277b25774f672323bbb799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Test integrals - base integrals&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Test integrals - base integrals&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_base_integrals.cpp" line="39" column="1" bodyfile="tests/test_base_integrals.cpp" bodystart="39" bodyend="529"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Zack<sp/>Williams<sp/>on<sp/>25/02/2024.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;integrals/base_integrals.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">uw12::integrals;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">uw12_test;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_df_vals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref><sp/>&amp;base_integrals,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_df)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;P2<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1af4734cedca35d2a64e1251adfecadacd" kindref="member">get_P2</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::linalg::n_rows(P2)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::linalg::n_cols(P2)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>CHECK(uw12::linalg::is_square(P2));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;df_vals<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2048e3b5a82c3dc3988ba4870462c515" kindref="member">get_df_vals</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>REQUIRE(uw12::linalg::n_elem(df_vals)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_df_offsets(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref><sp/>&amp;base_integrals,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>&amp;df_sizes</highlight></codeline>
<codeline lineno="23"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;df_size<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a802dafd3b85372cc9a36d8bc3543b00f" kindref="member">get_df_sizes</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>REQUIRE(df_sizes.size()<sp/>==<sp/>df_size.size());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>df_sizes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(df_sizes[i]<sp/>==<sp/>df_size[i]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df_offsets<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1abe396e5a6f9fcb17588a772443e7b0a2" kindref="member">get_df_offsets</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>REQUIRE(df_offsets.size()<sp/>==<sp/>df_sizes.size());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>df_sizes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(df_offsets[i]<sp/>==<sp/>offset);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>df_sizes[i];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;Test<sp/>integrals<sp/>-<sp/>base<sp/>integrals&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_ao<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_df<sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_ri<sp/>=<sp/>33;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>df_sizes<sp/>=<sp/>{1,<sp/>3,<sp/>5,<sp/>1,<sp/>3,<sp/>5,<sp/>1,<sp/>3};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>:<sp/>df_sizes)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>REQUIRE(total<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J20<sp/>=<sp/>uw12::linalg::random_pd(n_df,<sp/>seed);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J30<sp/>=<sp/>uw12::linalg::random(n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2,<sp/>n_df,<sp/>seed);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J3ri0<sp/>=<sp/>uw12::linalg::random(n_ao<sp/>*<sp/>n_ri,<sp/>n_df,<sp/>seed);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwoIndexFn<sp/>two_index_fn<sp/>=<sp/>[&amp;J20]()<sp/>-&gt;<sp/>uw12::linalg::Mat<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>J20;<sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThreeIndexFn<sp/>three_index_fn<sp/>=<sp/>[&amp;df_sizes,<sp/>&amp;J30](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>A</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>uw12::linalg::Mat<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_row<sp/>=<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_col<sp/>=<sp/>df_sizes[A];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>df_sizes[i];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uw12::linalg::sub_mat(J30,<sp/>0,<sp/>offset,<sp/>n_row,<sp/>n_col);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThreeIndexFn<sp/>three_index_ri_fn<sp/>=<sp/>[&amp;df_sizes,<sp/>&amp;J3ri0](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>A</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>uw12::linalg::Mat<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_row<sp/>=<sp/>n_ao<sp/>*<sp/>n_ri;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_col<sp/>=<sp/>df_sizes[A];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>df_sizes[i];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uw12::linalg::sub_mat(J3ri0,<sp/>0,<sp/>offset,<sp/>n_row,<sp/>n_col);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Default<sp/>constructor&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref><sp/>base_integrals;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(0));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(0));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1af4734cedca35d2a64e1251adfecadacd" kindref="member">get_P2</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a802dafd3b85372cc9a36d8bc3543b00f" kindref="member">get_df_sizes</ref>());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1abe396e5a6f9fcb17588a772443e7b0a2" kindref="member">get_df_offsets</ref>());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2048e3b5a82c3dc3988ba4870462c515" kindref="member">get_df_vals</ref>());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Standard<sp/>constructor&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_index_fn,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>three_index_fn,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>three_index_ri_fn,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_sizes,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ao,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_df,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ri</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J2<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J2)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J2)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::is_square(J2));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::is_symmetric(J2));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>0;<sp/>A<sp/>&lt;<sp/>df_sizes.size();<sp/>++A)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J3_A<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(A);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_A)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_A)<sp/>==<sp/>df_sizes[A]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>0;<sp/>A<sp/>&lt;<sp/>df_sizes.size();<sp/>++A)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J3_ri_A<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(A);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_ri_A)<sp/>==<sp/>n_ao<sp/>*<sp/>n_ri);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_ri_A)<sp/>==<sp/>df_sizes[A]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_vals(base_integrals,<sp/>n_df);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_offsets(base_integrals,<sp/>df_sizes);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_ri<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_ri)<sp/>==<sp/>n_ao<sp/>*<sp/>n_ri);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_ri)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>n_ri);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals2<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_index_fn,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>three_index_fn,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>three_index_ri_fn,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_sizes,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ao,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_df,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ri,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals2.storing_ao());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(base_integrals2.storing_ri());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_0());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_ri_0());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;P2_2<sp/>=<sp/>base_integrals2.get_P2();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1af4734cedca35d2a64e1251adfecadacd" kindref="member">get_P2</ref>(),<sp/>P2_2,<sp/>epsilon));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;df_vals_2<sp/>=<sp/>base_integrals2.get_df_vals();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2048e3b5a82c3dc3988ba4870462c515" kindref="member">get_df_vals</ref>(),<sp/>df_vals_2,<sp/>epsilon</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_2<sp/>=<sp/>base_integrals2.get_J3();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3,<sp/>J3_2,<sp/>epsilon));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_ri_2<sp/>=<sp/>base_integrals2.get_J3_ri();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_ri,<sp/>J3_ri_2,<sp/>epsilon));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals3<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_index_fn,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>three_index_fn,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>three_index_ri_fn,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_sizes,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ao,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_df,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ri,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals3.storing_ao());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals3.storing_ri());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals3.get_J3_0());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals3.get_J3_ri_0());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;P2_3<sp/>=<sp/>base_integrals3.get_P2();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1af4734cedca35d2a64e1251adfecadacd" kindref="member">get_P2</ref>(),<sp/>P2_3,<sp/>epsilon));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;df_vals_3<sp/>=<sp/>base_integrals3.get_df_vals();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2048e3b5a82c3dc3988ba4870462c515" kindref="member">get_df_vals</ref>(),<sp/>df_vals_3,<sp/>epsilon</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_3<sp/>=<sp/>base_integrals3.get_J3();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3,<sp/>J3_3,<sp/>epsilon));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_ri_3<sp/>=<sp/>base_integrals3.get_J3_ri();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_ri,<sp/>J3_ri_3,<sp/>epsilon));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Standard<sp/>constructor<sp/>(no<sp/>RI)&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals<sp/>=</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(two_index_fn,<sp/>three_index_fn,<sp/>df_sizes,<sp/>n_ao,<sp/>n_df);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J2<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J2)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J2)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::is_square(J2));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::is_symmetric(J2));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>0;<sp/>A<sp/>&lt;<sp/>df_sizes.size();<sp/>++A)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J3_A<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(A);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_A)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_A)<sp/>==<sp/>df_sizes[A]);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(0));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_vals(base_integrals,<sp/>n_df);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_offsets(base_integrals,<sp/>df_sizes);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals2<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_index_fn,<sp/>three_index_fn,<sp/>df_sizes,<sp/>n_ao,<sp/>n_df,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals2.storing_ao());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals2.storing_ri());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_0());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_ri_0());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_ri());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;P2_2<sp/>=<sp/>base_integrals2.get_P2();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1af4734cedca35d2a64e1251adfecadacd" kindref="member">get_P2</ref>(),<sp/>P2_2,<sp/>epsilon));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;df_vals_2<sp/>=<sp/>base_integrals2.get_df_vals();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2048e3b5a82c3dc3988ba4870462c515" kindref="member">get_df_vals</ref>(),<sp/>df_vals_2,<sp/>epsilon</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_2<sp/>=<sp/>base_integrals2.get_J3();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3,<sp/>J3_2,<sp/>epsilon));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;J3_0<sp/>constructor&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>J30,<sp/>J20,<sp/>three_index_ri_fn,<sp/>df_sizes,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>n_ao,<sp/>n_df,<sp/>n_ri</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(0));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>0;<sp/>A<sp/>&lt;<sp/>df_sizes.size();<sp/>++A)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>J3_ri_A<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(A);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_ri_A)<sp/>==<sp/>n_ao<sp/>*<sp/>n_ri);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_ri_A)<sp/>==<sp/>df_sizes[A]);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_vals(base_integrals,<sp/>n_df);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_offsets(base_integrals,<sp/>df_sizes);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_0<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_0,<sp/>J30,<sp/>epsilon));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_ri<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_ri)<sp/>==<sp/>n_ao<sp/>*<sp/>n_ri);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_ri)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>n_ri);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals2<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>J30,<sp/>J20,<sp/>three_index_ri_fn,<sp/>df_sizes,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>n_ao,<sp/>n_df,<sp/>n_ri,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(base_integrals2.storing_ao());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals2.storing_ri());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_0_2<sp/>=<sp/>base_integrals2.get_J3_0();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_0,<sp/>J3_0_2,<sp/>epsilon));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_ri_0());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals2.get_J3_ri());</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;J3_0<sp/>constructor<sp/>(RI_0)&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(J30,<sp/>J20,<sp/>J3ri0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>());</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(0));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(0));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_vals(base_integrals,<sp/>n_df);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a802dafd3b85372cc9a36d8bc3543b00f" kindref="member">get_df_sizes</ref>());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1abe396e5a6f9fcb17588a772443e7b0a2" kindref="member">get_df_offsets</ref>());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_0<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_0,<sp/>J30,<sp/>epsilon));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_ri_0<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_ri_0,<sp/>J3ri0,<sp/>epsilon));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_ri<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3_ri)<sp/>==<sp/>n_ao<sp/>*<sp/>n_ri);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3_ri)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>n_ri);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(<ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(uw12::linalg::head_rows(J30,<sp/>0),<sp/>J20,<sp/>J3ri0));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(uw12::linalg::head_cols(J30,<sp/>n_df<sp/>-<sp/>1),<sp/>J20,<sp/>J3ri0)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;J3_0<sp/>constructor<sp/>-<sp/>No<sp/>RI&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(J30,<sp/>J20);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(0));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(0));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>check_df_vals(base_integrals,<sp/>n_df);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a802dafd3b85372cc9a36d8bc3543b00f" kindref="member">get_df_sizes</ref>());</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1abe396e5a6f9fcb17588a772443e7b0a2" kindref="member">get_df_offsets</ref>());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_0<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_0,<sp/>J30,<sp/>epsilon));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_rows(J3)<sp/>==<sp/>n_ao<sp/>*<sp/>(n_ao<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(uw12::linalg::n_cols(J3)<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;J3<sp/>constructor<sp/>-<sp/>with<sp/>df_vals&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[vals,<sp/>vecs]<sp/>=<sp/>uw12::linalg::eigen_system(J20);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::linalg::Mat<sp/>P2<sp/>=</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecs<sp/>*<sp/>uw12::linalg::p_inv(uw12::linalg::diagmat(vals));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uw12::linalg::Mat<sp/>J3<sp/>=<sp/>J30<sp/>*<sp/>P2;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_integrals<sp/>=<sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(J3,<sp/>vals);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a3999213fbd0829555d106c4b52350f7d" kindref="member">two_index</ref>());</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1e2452f32149ceaa6654dac3858d5f87" kindref="member">three_index</ref>(0));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ac6a36f3a1aa6773fbad9a1b5e95c9e49" kindref="member">three_index_ri</ref>(0));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1a64736f1639b365b6bcebedd60396be" kindref="member">has_two_index_fn</ref>());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2b97bc418512e7dc35af87d0bd4c9656" kindref="member">has_three_index_fn</ref>());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a89811266118f8a09cb579fd4a523f2bf" kindref="member">has_three_index_ri_fn</ref>());</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1af4734cedca35d2a64e1251adfecadacd" kindref="member">get_P2</ref>());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;df_vals<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2048e3b5a82c3dc3988ba4870462c515" kindref="member">get_df_vals</ref>();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(df_vals,<sp/>vals,<sp/>epsilon));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a802dafd3b85372cc9a36d8bc3543b00f" kindref="member">get_df_sizes</ref>());</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1abe396e5a6f9fcb17588a772443e7b0a2" kindref="member">get_df_offsets</ref>());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a79fdc48d839b361675d67735593f9722" kindref="member">get_J3_0</ref>());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a6c25f78e914174babcb6df50041b8138" kindref="member">get_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab65cfd13ca9ad560f8c5fb0200c2c4a8" kindref="member">get_J3_ri</ref>());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;J3_2<sp/>=<sp/>base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a1f0d2125f139a3d0decbfe0bca3a2899" kindref="member">get_J3</ref>();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(uw12::linalg::nearly_equal(J3_2,<sp/>J3,<sp/>epsilon));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a5576cb061d7969113afe667112550fc6" kindref="member">get_number_ao</ref>()<sp/>==<sp/>n_ao);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ae772428a9f3c4ba40cdd38e0576db166" kindref="member">get_number_df</ref>()<sp/>==<sp/>n_df);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1acd0ce59b7c8f336427107b4f3e65c658" kindref="member">get_number_ri</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a629b76d0ae6d75c02e967a58d159909f" kindref="member">storing_ao</ref>());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1ab884b93cff3d85812bd43781b0144fad" kindref="member">storing_ri</ref>());</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aa666287be33e63bfff633d23d7de4d2f" kindref="member">has_P2</ref>());</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2793c518f348e9a5c0d048e411d22c08" kindref="member">has_df_vals</ref>());</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a4a12f1008a6170c30d2ca2c90d16930e" kindref="member">has_J3_0</ref>());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a657551cc3e591b1368d1e3f31963da34" kindref="member">has_J3</ref>());</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1aeacaadb51a45b4e5db625cf1c2da9705" kindref="member">has_J3_ri_0</ref>());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_FALSE(base_integrals.<ref refid="classuw12_1_1integrals_1_1_base_integrals_1a2d4436c84bf32bb8b111c7539a5fa723" kindref="member">has_J3_ri</ref>());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(<ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(uw12::linalg::head_cols(J3,<sp/>n_df<sp/>-<sp/>1),<sp/>df_vals));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>SECTION(</highlight><highlight class="stringliteral">&quot;Test<sp/>construction<sp/>fails&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(<ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(two_index_fn,<sp/>three_index_fn,<sp/>{},<sp/>n_ao,<sp/>n_df));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(<ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(two_index_fn,<sp/>three_index_fn,<sp/>df_sizes,<sp/>0,<sp/>n_df)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(<ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(two_index_fn,<sp/>three_index_fn,<sp/>df_sizes,<sp/>n_ao,<sp/>0)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(two_index_fn,<sp/>three_index_fn,<sp/>df_sizes,<sp/>n_ao,<sp/>n_df<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_THROWS(<ref refid="classuw12_1_1integrals_1_1_base_integrals" kindref="compound">BaseIntegrals</ref>(</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_index_fn,<sp/>three_index_fn,<sp/>three_index_ri_fn,<sp/>df_sizes,<sp/>n_ao,<sp/>n_df,<sp/>0</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/test_base_integrals.cpp"/>
  </compounddef>
</doxygen>
