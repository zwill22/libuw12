# Workflow to 
name: CMake on Ubuntu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        compiler: [g++]
        parallel_lib: [tbb, omp]
        linalg_lib: [arma, eigen]

    steps:
    - uses: actions/checkout@v4

    - name: Summary
      id: strings
      shell: bash
      run: |
        echo "Operating system=${{matrix.os}}"
        echo "Build type=${{matrix.build_type}}"
        echo "C++ Compiler=${{matrix.compiler}}"
        echo "Parallel threading library=${{matrix.parallel_lib}}"
        echo "Linear algebra library=${{matrix.linalg_lib}}"
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: install cmake
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y cmake 

    - name: cache arma
      if: matrix.linalg_lib == 'arma'
      id: cache-arma
      uses: actions/cache@v4
      with:
        path: ./armadillo-12.8.0
        key: ${{matrix.os}}-arma-12.8.0
        restore-keys: ${{matrix.os}}-arma-

    - name: install armadillo dependencies
      if: matrix.linalg_lib == 'arma'
      shell: bash
      run: sudo apt install -y libblas-dev liblapack-dev

    - name: download armadillo
      if: matrix.linalg_lib == 'arma' && steps.cache-arma.outputs.cache-hit != 'true'
      shell: bash
      run: |
        wget --no-check-certificate https://sourceforge.net/projects/arma/files/armadillo-12.8.0.tar.xz
        tar xf armadillo-12.8.0.tar.xz

    - name: install eigen
      if: matrix.linalg_lib == 'eigen'
      shell: bash
      run: sudo apt install -y libeigen3-dev

    - name: install tbb
      if: matrix.parallel_lib == 'tbb'
      shell: bash
      run: sudo apt install -y libtbb-dev

    - name: cache catch2
      id: cache-catch
      uses: actions/cache@v4
      with:
        path: ./Catch2
        key: ${{matrix.os}}-Catch2-
        restore-keys: ${{matrix.os}}-Catch2-

    - name: build catch2
      if: steps.cache-catch.outputs.cache-hit != 'true'
      shell: bash
      run: |
        git clone https://github.com/catchorg/Catch2.git --depth 1
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        sudo cmake --build build/ --target install
        cd ..

    - name: install catch2
      shell: bash
      run: |
        cd Catch2
        sudo cmake --build build/ --target install
        cd ..

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DARMADILLO_INCLUDE_DIR="armadillo-12.8.0/include"

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build_type}} --output-on-failure
